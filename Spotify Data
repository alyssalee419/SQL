--I downloaded Spotify data from Kaggle
--Created a table to insert the Spotify data into MySQLlite
--Performed analytics on the data using SQL

--create table
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

--I inserted the data .csv into the table

--1. Determine the average popularity, danceability, and energy by artist and track

SELECT artist_name, track_name, 
AVG(popularity), 
AVG(danceability),
 AVG(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name

--2. Who are the top 10 artists by popularity?

SELECT artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10

--3. What artists have the best danceability? List the top 10.

SELECT artist_name, danceability
FROM BIT_DB.Spotifydata
ORDER BY danceability DESC
LIMIT 10

--4. Which track has the highest danceability? Who is the artist?

SELECT artist_name, track_name, danceability
FROM BIT_DB.Spotifydata
ORDER BY danceability DESC
LIMIT 1

